job_config_defaults: &job_config_defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12.18

workflow_job_filters: &workflow_job_filters
  filters:
    branches:
      only:
        - main
        - dev

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.1

jobs:
  checkout_code:
    <<: *job_config_defaults
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-

      - checkout

      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - '~/repo'
  install:
    <<: *job_config_defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: 'Yarn install'
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  test:
    <<: *job_config_defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: 'Test'
          command: npm run test
  build:
    <<: *job_config_defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: 'Build app'
          command: yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build
            - package.json
  deploy:
    <<: *job_config_defaults
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-cli/setup:
          profile-name: circleci
      - run: aws --version
      - run: aws s3 ls
      - run:
          name: 'Deploy to S3'
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              aws s3 sync build/ s3://${PRODUCTION_S3_BUCKET} --delete
              aws cloudfront create-invalidation --distribution-id "${PRODUCTION_CLOUDFRONT_DISTRIBUTION_ID}" --paths /index.html
            elif [ "${CIRCLE_BRANCH}" == "dev" ]; then
              aws s3 sync build/ s3://${STAGING_S3_BUCKET} --delete
              aws cloudfront create-invalidation --distribution-id "${STAGING_CLOUDFRONT_DISTRIBUTION_ID}" --paths /index.html
            fi

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - install:
          requires:
            - checkout_code
      - test:
          <<: *workflow_job_filters
          requires:
            - install
      - build:
          requires:
            - install
      - deploy:
          requires:
            - test
            - build
